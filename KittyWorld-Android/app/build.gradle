import java.security.InvalidKeyException

apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        applicationId "com.kitty.kittyworld"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        flavorDimensions 'default'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }

    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
    }

    signingConfigs {
        debug {
            try {
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
            } catch (ex) {
                throw new InvalidKeyException("You should define RELEASE_STORE_PASSWORD and RELEASE_KEY_PASSWORD in gradle.properties.")
            }
        }

        release {
            try {
                keyAlias RELEASE_KEY_ALIAS
                keyPassword RELEASE_KEY_PASSWORD
                storeFile file(RELEASE_STORE_FILE)
                storePassword RELEASE_STORE_PASSWORD
            } catch (ex) {
                throw new InvalidKeyException("You should define RELEASE_STORE_PASSWORD and RELEASE_KEY_PASSWORD in gradle.properties.")
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    flavorDimensions "mode"
    productFlavors {
        kittyworld {
            dimension "mode"
            buildConfigField 'String', 'URL_TYPE', '"test_net"'
            buildConfigField 'boolean', 'IS_TEST_ENV', 'true'
            manifestPlaceholders = [
                    app_name: rootProject.ext.appNameDebug
            ]

        }
        kitty {
            dimension "mode"
            buildConfigField 'String', 'URL_TYPE', '"release_net"'
            buildConfigField 'boolean', 'IS_TEST_ENV', 'false'
            manifestPlaceholders = [
                    app_name: rootProject.ext.appNameDebug
            ]
        }
    }
    packagingOptions {
        exclude 'lib/x86_64/darwin/libscrypt.dylib'
        exclude 'lib/x86_64/freebsd/libscrypt.so'
        exclude 'lib/x86_64/linux/libscrypt.so'
    }

    compileOptions {
        sourceCompatibility = '1.8'
        targetCompatibility = '1.8'
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':kitty_base')
    implementation project(':kitty_res')
    implementation project(path: ':kitty_bonus')
    implementation project(path: ':kitty_home')
    implementation project(path: ':kitty_mine')
    implementation project(path: ':kittty_travel')
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    annotationProcessor rootProject.ext.dependencies["arouter-annotationProcessor"]
}
