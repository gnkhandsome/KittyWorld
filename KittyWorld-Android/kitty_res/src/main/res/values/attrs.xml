<resources xmlns:tools="http://schemas.android.com/tools" tools:ignore="ResourceName">

    <declare-styleable name="SwipCardsView">
        <!-- yOffsetStep定义的是卡片之间在y轴方向上的偏移量，单位是dp，
        举个例子，可见的卡片有3个，如果步长是20dp，从前往后看，卡片y轴坐标会依次增加20dp，表现上就是后面一张卡片底部有20dp会露出来
        如果值是负的，如 -20dp，那么表现则相反。
         如果不需要对卡片进行y轴方向上的偏移量处理，不设置这个属性或者设置为0dp就可以了-->
        <attr name="yOffsetStep" format="dimension" />
        <!-- alpha定义的取值范围是0-100，所以alpha的步长也得在这个范围之内，
        举个例子，可见的卡片有3个，如果步长是40，那么最前面的alpha是100，后面一点的是60，最后面的是20
         如果不需要对卡片进行透明度处理，不设置这个属性或者设置为0就可以了-->
        <attr name="alphaOffsetStep" format="integer" />
        <!-- scale定义的取值范围是0-1，所以scale的步长也得在这个范围之内，
        举个例子，可见的卡片有3个，如果步长是0.08，那么最前面的alpha是1，后面一点的是0.92，最后面的是0.84
        值得注意的是 x 和 y同时被缩放了(1 - scaleStep*index)
        如果不需要对卡片进行缩放处理，不设置这个属性或者设置为0就可以了-->
        <attr name="scaleOffsetStep" format="float" />
    </declare-styleable>


    <declare-styleable name="RadioButtonView">

        <attr name="margin" format="dimension" />
        <attr name="strokeWidth" format="dimension" />
        <attr name="frameColor" format="color" />
        <attr name="textColor" format="color" />

    </declare-styleable>

    <!-- require boolean value to decide whether requestFocus for view. -->
    <attr name="requestFocus" format="boolean" />
    <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
    <attr name="itemView" format="reference" />
    <!-- require List<ViewModel> bind to ItemView to presentation.-->
    <attr name="items" format="reference" />
    <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
    <attr name="adapter" format="reference" />

    <attr name="onScrollChangeCommand" format="reference" />
    <attr name="onScrollStateChangedCommand" format="reference" />
    <attr name="url" format="string" />
    <attr name="onTouchCommand" format="reference" />

    <!-- require BindingCommand {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view click event. -->
    <attr name="onClickCommand" format="reference" />
    <attr name="onLongClickCommand" format="reference" />
    <!-- require BindingCommand<Boolean> {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view focus change event.
     BindingCommand would has params which means if view hasFocus.-->
    <attr name="onFocusChangeCommand" format="reference" />
    <attr name="isThrottleFirst" format="boolean" />
    <attr name="currentView" format="reference" />
    <!-- require boolean value to decide whether requestFocus for view. -->
    <declare-styleable name="View">
        <!-- require BindingCommand {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view click event. -->
        <attr name="onClickCommand" />
        <attr name="onLongClickCommand" />
        <!-- require BindingCommand<Boolean> {@link com.kelin.mvvmlight.command.BindingCommand } to deal with view focus change event.
         BindingCommand would has params which means if view hasFocus.-->
        <attr name="onFocusChangeCommand" />
        <!-- require BindingCommand<MotionEvent> -->
        <attr name="onTouchCommand" />
        <attr name="isThrottleFirst" />
        <attr name="currentView" />

    </declare-styleable>


    <declare-styleable name="AdapterView">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="items" />
        <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
        <attr name="adapter" />
        <attr name="dropDownItemView" format="reference" />
        <attr name="itemIds" format="reference" />
        <attr name="itemIsEnabled" format="reference" />
        <!-- require BindingCommand<Integer> -->
        <attr name="onScrollStateChangedCommand" />
        <!-- require BindingCommand<ListViewScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
        <!-- require BindingCommand<Integer> count of list items-->
        <attr name="onLoadMoreCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="TextView">
        <!--require BindingCommand<TextChangeDataWrapper> -->
        <attr name="beforeTextChangedCommand" format="reference" />
        <!--require BindingCommand<TextChangeDataWrapper> -->
        <attr name="onTextChangedCommand" format="reference" />
        <!--require BindingCommand<String> -->
        <attr name="afterTextChangedCommand" format="reference" />
        <attr name="textChanged" format="reference" />
    </declare-styleable>


    <declare-styleable name="ImageView">
        <!--  load bitmap from uri(string type) -->
        <attr name="url" />
        <!--width for ResizeOptions (use Fresco to load bitmap). -->
        <attr name="request_width" format="integer" />
        <!--height for ResizeOptions (use Fresco to load bitmap). -->
        <attr name="request_height" format="integer" />
        <attr name="placeholderRes" format="reference|color" />
        <!--  require BindingCommand<Bitmap> See {@link @link com.kelin.mvvmlight.command.BindingCommand} -->
        <attr name="onSuccessCommand" format="reference" />
        <!--require BindingCommand<CloseableReference<CloseableImage>> See {@link com.kelin.mvvmlight.command.BindingCommand} -->
        <attr name="onFailureCommand" format="reference" />

    </declare-styleable>


    <declare-styleable name="ViewGroup">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="observableList" format="reference" />

    </declare-styleable>

    <declare-styleable name="RecyclerView" parent="AdapterView">
        <attr name="lineManager" format="reference" />
        <attr name="itemBinding" format="reference" />
    </declare-styleable>
    <declare-styleable name="RadioGroup">
        <attr name="onCheckedChangedCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="Spinner">
        <attr name="itemDatas" format="reference" />
        <attr name="valueReply" format="string" />
        <attr name="onItemSelectedCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="Switch">
        <attr name="onCheckedChangeCommand" format="reference" />
        <attr name="switchState" format="boolean" />
    </declare-styleable>

    <declare-styleable name="ListView" parent="AdapterView">
        <!--require BindingCommand<Integer> integer mean to position where is clicked! -->
        <attr name="onItemClickCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="ViewPager">
        <!-- require ItemView {@link me.tatarka.bindingcollectionadapter.ItemView} or ItemViewSelector {{@link me.tatarka.bindingcollectionadapter.ItemViewSelector}.} -->
        <attr name="itemView" />
        <!-- require List<ViewModel> bind to ItemView to presentation.-->
        <attr name="items" />
        <!-- require a adapter which type of BindingRecyclerViewAdapter<T> to AdapterView-->
        <attr name="adapter" />
        <!-- require PageTitles<T>-->
        <attr name="pageTitles" format="reference" />
        <!--require BindingCommand<ViewPagerDataWrapper> -->
        <attr name="onPageScrolledCommand" format="reference" />
        <!--require BindingCommand<Integer> -->
        <attr name="onPageSelectedCommand" format="reference" />
        <!--require BindingCommand<Integer> -->
        <attr name="onPageScrollStateChangedCommand" format="reference" />

    </declare-styleable>

    <declare-styleable name="NestedScrollView">
        <!-- require BindingCommand<NestScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
    </declare-styleable>

    <declare-styleable name="SimpleDraweeView">
        <!-- require String to load Image"-->
        <attr name="url" />
    </declare-styleable>

    <declare-styleable name="ScrollView">
        <!-- require BindingCommand<ScrollDataWrapper> -->
        <attr name="onScrollChangeCommand" />
    </declare-styleable>

    <declare-styleable name="SwipeRefreshLayout">
        <!-- require RelayCommand -->
        <attr name="onRefreshCommand" format="reference" />
    </declare-styleable>

    <declare-styleable name="WebView">
        <!-- require String render to html show in webview-->
        <attr name="render" format="string" />
    </declare-styleable>
    <!-- 自定义控制事件分发的LinearLayout -->
    <declare-styleable name="ControlDistributeLinearLayout">
        <attr name="distribute_event" format="boolean" />
    </declare-styleable>

    <declare-styleable name="BorderRelativeLayout">
        <attr name="borderStrokeWidth" />
        <attr name="borderColor" />
        <attr name="borderBottomLeftBreakSize" />
        <attr name="borderBottomRightBreakSize" />
        <attr name="needTopBorder" />
        <attr name="needLeftAndRigtBorder" />
        <attr name="needBottomBorder" />
    </declare-styleable>

    <declare-styleable name="RatioLinearLayout">
        <attr name="ratio_linear_layout" format="float" />
    </declare-styleable>

    <declare-styleable name="ZLoadingView">
        <attr name="z_type">
            <enum name="TextBuilder" value="9"/>
        </attr>
        <attr name="z_color" format="color"/>
        <attr name="z_duration_percent" format="float"/>
    </declare-styleable>

    <declare-styleable name="ZLoadingTextView">
        <attr name="z_text" format="string"/>
    </declare-styleable>

    <declare-styleable name="RatioImageView">
        <attr name="ratio_image_view" format="float" />
    </declare-styleable>

    <declare-styleable name="RatioFragment">
        <attr name="ratio_fragment" format="float" />
    </declare-styleable>

</resources>